/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

import { Runs, NavigationEndpoint, Thumbnail, Badges, LongBylineText, ShortBylineText } from './index.js';

export interface Accessibility {
  accessibilityData: AccessibilityData;
}

export interface AccessibilityData {
  label?: string;
}

export interface AccessibilityDataWithObject {
  accessibility?: Accessibility;
  runs?: Runs;
  simpleText?: string;
}

export interface ChannelThumbnailWithLinkRenderer {
  channelThumbnailWithLinkRenderer: {
    accessibility?: any;
    navigationEndpoint: NavigationEndpoint;
    thumbnail: Thumbnail;
  };
}

export type DetailedMetadataSnippets = Snippet[];

export interface InlinePlaybackEndpoint {
  clickTrackingParams: string;
  commandMetadata: {
    webCommandMetadata: any;
  };
  watchEndpoint: NavigationEndpoint;
}

export interface LengthText {
  accessibility: Accessibility;
  simpleText: string;
}

export interface MenuRenderer {
  menuRenderer: {
    accessibility?: any;
    items?: any[];
    trackingParams: string;
  };
}

export interface OwnerText {
  runs?: Runs;
}

export interface PublishedTimeText {
  simpleText: string;
}

export interface Snippet {
  maxOneLine?: boolean;
  snippetHoverText: AccessibilityDataWithObject;
  snippetText: AccessibilityDataWithObject;
}

export interface Title {
  accessibility: Accessibility;
  runs?: Runs;
}

export interface Video {
  badges?: Badges;
  channelThumbnailSupportedRenderers: ChannelThumbnailWithLinkRenderer;
  detailedMetadataSnippets?: DetailedMetadataSnippets;
  expandableMetadata?: object;
  inlinePlaybackEndpoint?: InlinePlaybackEndpoint;
  lengthText: LengthText;
  longBylineText: LongBylineText;
  menu: MenuRenderer;
  navigationEndpoint: NavigationEndpoint;
  ownerBadges?: Badges;
  ownerText: OwnerText;
  publishedTimeText?: PublishedTimeText;
  richThumbnail?: {
    movingThumbnailRenderer: any;
  };
  searchVideoResultEntityKey: string;
  shortBylineText: ShortBylineText;
  shortViewCountText: AccessibilityDataWithObject;
  showActionMenu: boolean;
  thumbnail: Thumbnail;
  thumbnailOverlays: any[];
  title: Title;
  trackingParams: string;
  videoId: string;
  viewCountText: ViewCountText;
}

export interface ViewCountText {
  simpleText: string;
}
