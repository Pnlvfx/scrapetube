/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

export interface BrowseEndpoint {
  browseId: string;
  canonicalBaseUrl: string;
}

export interface DescriptionSnippet {
  runs: Runs;
}

export interface LongBylineText {
  runs: {
    navigationEndpoint: NavigationEndpoint;
    text: string;
  }[];
}

export interface NavigationEndpoint {
  browseEndpoint: BrowseEndpoint;
  clickTrackingParams: string;
  commandMetadata: {
    webCommandMetadata: WebCommandMetadata;
  };
}

export type Runs = {
  text: string;
}[];

export interface ShortBylineText {
  runs: {
    navigationEndpoint: NavigationEndpoint;
    text: string;
  }[];
}

export interface SubscriberCountText {
  simpleText: string;
}

export interface SubscriptionButton {
  subscribed: boolean;
}

export interface Thumbnail {
  thumbnails: {
    height: number;
    url: string;
    width: number;
  }[];
}

export interface Title {
  simpleText: string;
}

export interface VideoCountText {
  accessibility: {
    accessibilityData: {
      label: string;
    };
  };
  simpleText: string;
}

export interface WebCommandMetadata {
  apiUrl: string;
  rootVe: number;
  url: string;
  webPageType: 'WEB_PAGE_TYPE_CHANNEL';
}

export interface subscribeButton {
  buttonRenderer: {
    isDisabled: boolean;
    navigationEndpoint: NavigationEndpoint;
    size: 'SIZE_DEFAULT';
    style: 'STYLE_DESTRUCTIVE';
    text: {
      runs: {
        text: string;
      }[];
    };
    trackingParams: string;
  };
}
