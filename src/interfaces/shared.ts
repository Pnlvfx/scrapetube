/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

export type Badges = MetadataBadgeRenderer[];

export interface BrowseEndpoint {
  browseId: string;
  canonicalBaseUrl?: string;
}

export interface DescriptionSnippet {
  runs: Runs;
}

export interface LongBylineText {
  runs: {
    navigationEndpoint: NavigationEndpoint;
    text: string;
  }[];
}

export interface MetadataBadgeRenderer {
  metadataBadgeRenderer: {
    accessibilityData?: {
      label?: string;
    };
    icon?: {
      iconType: 'CHECK_CIRCLE_THICK' | 'OFFICIAL_ARTIST_BADGE';
    };
    label?: string;
    style?: 'BADGE_STYLE_TYPE_VERIFIED' | 'BADGE_STYLE_TYPE_SIMPLE' | 'BADGE_STYLE_TYPE_VERIFIED_ARTIST';
    tooltip?: string;
    trackingParams: string;
  };
}

export interface NavigationEndpoint {
  browseEndpoint?: BrowseEndpoint;
  clickTrackingParams?: string;
  commandMetadata?: {
    webCommandMetadata: WebCommandMetadata;
  };
  params?: string;
  playerExtraUrlParams?: {
    key: string;
    value: string;
  }[];
  playerParams?: string;
  signInEndpoint?: SignInEndpoint;
  videoId?: string;
  watchEndpoint?: {
    params?: string;
    playerExtraUrlParams?: {
      key: string;
      value: string;
    }[];
    playerParams?: string;
    videoId?: string;
    watchEndpointSupportedOnesieConfig?: {
      html5PlaybackOnesieConfig: {
        commonConfig: {
          url: string;
        };
      };
    };
  };
  watchEndpointSupportedOnesieConfig?: {
    html5PlaybackOnesieConfig: {
      commonConfig: {
        url: string;
      };
    };
  };
}

export type OwnerBadges = MetadataBadgeRenderer[];

export type Runs = {
  bold?: boolean;
  navigationEndpoint?: NavigationEndpoint;
  text: string;
}[];

export interface ShortBylineText {
  runs: {
    navigationEndpoint: NavigationEndpoint;
    text: string;
  }[];
}

export interface SignInEndpoint {
  continueAction: string;
  nextEndpoint: {
    clickTrackingParams: string;
    commandMetadata: {
      webCommandMetadata: WebCommandMetadata;
    };
    searchEndpoint: {
      params: string;
      query: string;
    };
  };
}

export interface SubscriberCountText {
  simpleText: string;
}

export interface SubscriptionButton {
  subscribed: boolean;
}

export interface Thumbnail {
  thumbnails: {
    height: number;
    url: string;
    width: number;
  }[];
}

export interface VideoCountText {
  accessibility?: {
    accessibilityData: {
      label: string;
    };
  };
  runs?: Runs;
  simpleText?: string;
}

export interface WebCommandMetadata {
  apiUrl?: string;
  rootVe: number;
  url: string;
  webPageType: 'WEB_PAGE_TYPE_CHANNEL' | 'WEB_PAGE_TYPE_WATCH' | 'WEB_PAGE_TYPE_UNKNOWN' | 'WEB_PAGE_TYPE_SEARCH' | 'WEB_PAGE_TYPE_SHORTS';
}

export interface subscribeButton {
  buttonRenderer: {
    isDisabled: boolean;
    navigationEndpoint: NavigationEndpoint;
    size: 'SIZE_DEFAULT';
    style: 'STYLE_DESTRUCTIVE';
    text: {
      runs: {
        text: string;
      }[];
    };
    trackingParams: string;
  };
}
